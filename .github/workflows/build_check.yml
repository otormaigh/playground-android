name: Build + Check

on:
  push:
    paths-ignore:
      - 'NOTES.md'
    branches:
      - master
  pull_request:
    paths-ignore:
      - 'NOTES.md'

jobs:
  pre-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Setup Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1.0.3
      - name: Run dependencies
        run: ./gradlew :app:dependencies --stacktrace --scan
      - name: Validate Database schema changes
        run: |
          ./gradlew generateLiveReleaseDatabaseSchema --stacktrace --scan
          if [[ $(git diff --stat) != '' ]]; then
            echo "> Error: Database schema changed without adding a migration."
            exit 1
          else
            ./gradlew verifySqlDelightMigration --stacktrace --scan
          fi

  check:
    needs: pre-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: check-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: Setup Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - name: Quality checks
        run: ./gradlew lint --stacktrace --scan

  test:
    needs: pre-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: test-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: Setup Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - name: Unit Test
        run: ./gradlew test --stacktrace --scan
      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v2.2.3
        with:
          name: report-archive
          path: |
            app/build/test-results
            library/networking/build/test-results
            library/persistence/build/test-results
            library/store/build/test-results
            feature/photos/build/test-results
          retention-days: 1

  build:
    needs:
      - check
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: build-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: Setup Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - name: Decrypt secrets
        env:
          PLAYGROUND_ENCRYPT_KEY: ${{ secrets.PLAYGROUND_ENCRYPT_KEY }}
        run: ./enc/decrypt.sh
      - name: Assemble Release
        run: ./gradlew clean assembleLiveRelease bundleLiveRelease --stacktrace --scan
      - name: Archive APKs
        run: |
          cp app/build/outputs/apk/live/release/*.apk release-${{ github.sha }}.apk
          cp app/build/outputs/bundle/liveRelease/*.aab release-${{ github.sha }}.aab
      - name: Upload archived assets
        uses: actions/upload-artifact@v2.2.3
        with:
          name: build-archive
          path: |
            release-${{ github.sha }}.apk
            release-${{ github.sha }}.aab
          retention-days: 1
      - name: Push APK to assets/master
        if: github.ref == 'refs/heads/master'
        run: |
          git config user.name "Github Action"
          git config user.email "elliot.tormey@gmail.com"
          git checkout --orphan assets/master
          git rm --cached -r .
          cp -R app/build/outputs/apk/live/release/. assets
          cp -R app/build/outputs/bundle/liveRelease/. assets
          git add assets
          git commit -m 'add assets from ${{ github.sha }}'
          git push -f origin assets/master

      - name: Remove encrypted files
        if: always()
        run: |
          rm -rf signing/release
          rm -rf enc.properties