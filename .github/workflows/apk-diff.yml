name: APK Diff

on:
  workflow_run:
    workflows: ["Build + Check"]
    types:
      - completed

jobs:
  apk-diff:
    name: APK Diff
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.conclusion != 'skipped' && (
         github.event.sender.login == 'dependabot[bot]' ||
         github.event.workflow_run.head_repository.full_name != github.repository
      )

    steps:
      - name: Download Artifacts
        uses: actions/github-script@v3
        with:
          script: |
            var fs = require('fs');
            var path = require('path');
            var artifacts_path = path.join('${{github.workspace}}', 'artifacts')
            fs.mkdirSync(artifacts_path, { recursive: true })

            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{ github.event.workflow_run.id }},
            });

            for (const artifact of artifacts.data.artifacts) {
               var download = await github.actions.downloadArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id,
                  archive_format: 'zip',
               });
               var artifact_path = path.join(artifacts_path, `${artifact.name}.zip`)
               fs.writeFileSync(artifact_path, Buffer.from(download.data));
               console.log(`Downloaded ${artifact_path}`);
            }
      - name: Extract Artifacts
        run: |
          for file in artifacts/*.zip
          do
            if [ -f "$file" ]
            then
              dir="${file/%.zip/}"
              mkdir -p "$dir"
              unzip -d "$dir" "$file"
            fi
          done

      - uses: actions/checkout@v2.3.4
      # Manually download from branch rather than using action/checkout step so that
      # diffuse binary is the latest relative to the branch being build rather than master etc.
      - name: Download Latest assets from assets/master
        run: git fetch origin && git checkout origin/assets/master assets/

      - name: Run diffuse on APK
        run: |
          .github/bin/diffuse-0.1.0-binary.jar diff --apk assets/*.apk release-${{ github.sha }}.apk > apk-diff-${{ github.sha }}.txt
          printf "### Diffuse stats for \`$(echo ${GITHUB_BASE_REF} | cut -c1-7)\` ➡ $(echo ${GITHUB_SHA} | cut -c1-7) \n\n\`\`\`\n" > apk-pr-comment.txt && sed '/====   DEX   ====/q' apk-diff-${{ github.sha }}.txt | tac | sed "1,2d" | tac | sed -e :a -e '/^\n*$/{$d;N;};/\n$/ba' >> apk-pr-comment.txt && echo "\`\`\`"  >> apk-pr-comment.txt
      - name: Add APK diff
        uses: machine-learning-apps/pr-comment@1.0.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          path: apk-pr-comment.txt

      - name: Run diffuse on AAB
        run: |
          .github/bin/diffuse-0.1.0-binary.jar diff --aab assets/*.aab release-${{ github.sha }}.aab > aab-diff-${{ github.sha }}.txt
          printf "### Diffuse stats for \`$(echo ${GITHUB_BASE_REF} | cut -c1-7)\` ➡ $(echo ${GITHUB_SHA} | cut -c1-7) \n\n\`\`\`\n" > aab-pr-comment.txt && sed '/====   DEX   ====/q' aab-diff-${{ github.sha }}.txt | tac | sed "1,2d" | tac | sed -e :a -e '/^\n*$/{$d;N;};/\n$/ba' >> aab-pr-comment.txt && echo "\`\`\`"  >> aab-pr-comment.txt
      - name: Add AAB diff
        uses: machine-learning-apps/pr-comment@1.0.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          path: aab-pr-comment.txt

      - name: Upload full diff
        uses: actions/upload-artifact@v2.2.2
        with:
          name: diff-report
          path: |
            apk-diff-${{ github.sha }}.txt
            aab-diff-${{ github.sha }}.txt